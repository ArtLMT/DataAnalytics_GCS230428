)
kable(conversion_by_device, caption = "Conversion Rate by 'Device' (Source/Medium) per Month and Year")
ggplot(conversion_by_device, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
facet_wrap(~ Year) +
labs(
title = "Average Conversion Rate by Device per Month and Year",
x = "Month",
y = "Conversion Rate (%)",
fill = "Device"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
device_2019 <- filter(conversion_by_device, Year == 2019)
device_2020 <- filter(conversion_by_device, Year == 2020)
kable(device_2019, caption = "Conversion Rate by Device - 2019")
kable(device_2020, caption = "Conversion Rate by Device - 2020")
ggplot(device_2019, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
labs(
title = "2019: Avg. Conversion Rate by Device per Month",
x = "Month",
y = "Conversion Rate (%)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
ggplot(device_2020, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
labs(
title = "2020: Avg. Conversion Rate by Device per Month",
x = "Month",
y = "Conversion Rate (%)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
df_device_simulated <- df_clean_task_one %>%
mutate(
mobile_score =
ifelse(`Bounce Rate` >= 58, 1, 0) +
ifelse(`Avg. Session Duration` <= 60, 1, 0) +
ifelse(`Conversion Rate (%)` <= 2, 1, 0),
desktop_score =
ifelse(`Bounce Rate` <= 50, 1, 0) +
ifelse(`Avg. Session Duration` >= 120, 1, 0) +
ifelse(`Conversion Rate (%)` >= 3, 1, 0),
Device = case_when(
mobile_score >= 2 ~ "Mobile",
desktop_score >= 2 ~ "Desktop",
TRUE ~ "Desktop"  # default if unclear
)
)
# set Month from  numberic to words
df_device_simulated$Month <- factor(df_device_simulated$`Month of the year`,
levels = 1:12,
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"),
ordered = TRUE)
device_summary_direct <- df_device_simulated %>%
group_by(Year, Month, Device) %>%
summarise(
Conversion = `Conversion Rate (%)`,
.groups = "drop"
)
df_device_simulated %>%
group_by(Month, Device) %>%
summarise(Count = n(), .groups = "drop") %>%
group_by(Month) %>%
mutate(Proportion = Count / sum(Count)) %>%
ggplot(aes(x = Month, y = Proportion, fill = Device)) +
geom_col(position = "stack") +
labs(
title = "Proportion of Device Types per Month",
x = "Month", y = "Proportion", fill = "Device"
) +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
df_table <- df_device_simulated %>%
select(Year, `Month of the year`, Device, `Conversion Rate (%)`, Sessions, Revenue) %>%
arrange(Year, `Month of the year`, Device)
kable(df_table, caption = "Conversion Rate by Device, Year, and Month (Raw Values)")
ggplot(df_device_simulated, aes(x = Month, y = `Conversion Rate (%)`, color = Device)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2) +
facet_wrap(~ Year) +
labs(
title = "Monthly Conversion Rate by Device (Original Dataset)",
x = "Month",
y = "Conversion Rate (%)",
color = "Device"
) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
table(df_device_simulated$Device)
prop.table(table(df_device_simulated$Device)) * 100  # See % split
ggplot(df_device_simulated, aes(x = Month, y = `Conversion Rate (%)`, color = Device, group = Device)) +
geom_line(size = 1) +
geom_point(size = 2, alpha = 0.7) +
facet_wrap(~ Year) +
labs(
title = "Monthly Conversion Rate by Device",
x = "Month",
y = "Conversion Rate (%)",
color = "Device"
) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_device_simulated, aes(x = Month, y = `Conversion Rate (%)`, fill = Device)) +
geom_col(position = "dodge") +
facet_wrap(~ Year) +
labs(
title = "Monthly Conversion Rate by Device (Original Dataset)",
x = "Month",
y = "Conversion Rate (%)",
fill = "Device"
) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_relationship <- df_clean_task_one %>%
select(`Bounce Rate`, `Conversion Rate (%)`, Revenue, Transactions)
cor_matrix <- round(cor(df_relationship, use = "complete.obs"), 2)
cor_df <- as.data.frame(cor_matrix) %>%
mutate(Var1 = rownames(.)) %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "Correlation")
cor_matrix
cor_df
ggplot(cor_df, aes(x = Var1, y = Var2, fill = Correlation)) +
geom_tile(color = "white") +
geom_text(aes(label = Correlation), color = "black", size = 4) +
scale_fill_gradient2(low = "red", mid = "white", high = "green",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
labs(title = "Heatmap: Bounce Rate vs Conversion, Transactions, Revenue",
x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_clean_task_one, aes(x = Transactions, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Transaction vs Revenue",
x = "Transaction", y = "Revenue") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Conversion Rate (%)`, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Conversion Rate (%) vs Revenue",
x = "Conversion Rate (%)", y = "Revenue") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Conversion Rate (%)`, y = Transactions)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Conversion Rate (%) vs Transactions",
x = "Conversion Rate (%)", y = "Transactions") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = `Conversion Rate (%)`)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Bounce Rate vs Conversion Rate",
x = "Bounce Rate (%)", y = "Conversion Rate (%)") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = Transactions)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Bounce Rate vs Transactions",
x = "Bounce Rate (%)", y = "Transactions") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Bounce Rate vs Revenue",
x = "Bounce Rate (%)", y = "Revenue") +
theme_minimal()
ggplot(conversion_by_device, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
facet_wrap(~ Year) +
labs(
title = "Average Conversion Rate by Device per Month and Year",
x = "Month",
y = "Conversion Rate (%)",
fill = "Device"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(skimr)
library(knitr) # For better table
library(lubridate) # Task 1B test
df <- read_csv("../data/Web Analytic_Dataset.csv")
# df <- read.csv("../data/Web Analytic_Dataset.csv") # doesn't clean data
df
cat("The dimension of dataset: number of columns", ncol(df), "number of rows: ", nrow((df)))
str(df) # Structure of dataset
sapply(df,class)
colSums(is.na(df))
any(duplicated(df))
df_clean_task_one <- df %>%
mutate(
Revenue = as.numeric(gsub(",", "", Revenue)),
Sessions = as.numeric(gsub(",", "", Sessions)),
`Conversion Rate (%)` = gsub("<", "", `Conversion Rate (%)`),         # Remove < symbol
`Conversion Rate (%)` = as.numeric(gsub("%", "", `Conversion Rate (%)`)),
`Bounce Rate` = as.numeric(gsub("%", "", `Bounce Rate`))
)
str(df_clean_task_one)
top3_dual <- df_clean_task_one %>%
group_by(Year, `Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
) %>%
group_by(Year) %>%
slice_max(Total_Sessions, n = 3) %>%
ungroup()
top3_dual <- df_clean_task_one %>%
group_by(Year, `Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
) %>%
group_by(Year) %>%
slice_max(Total_Sessions, n = 3) %>%
ungroup()
# Plot
top3_sessions <- top3_dual %>%
select(Year, `Source / Medium`, Total_Sessions, Total_Revenue)
ggplot(top3_sessions, aes(x = `Source / Medium`, y = Total_Sessions, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = scales::comma(Total_Revenue)),
vjust = -0.5, size = 3.5) +
facet_wrap(~ Year) +
labs(
title = "Top 3 Traffic Sources per Year by Sessions (with Revenue Labels)",
x = "Source / Medium",
y = "Total Sessions"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
top3_dual <- df_clean_task_one %>%
group_by(Year, `Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
) %>%
group_by(Year) %>%
slice_max(Total_Revenue, n = 3) %>%
ungroup()
top3_revenue <- top3_dual %>%
select(Year, `Source / Medium`, Total_Sessions, Total_Revenue)
ggplot(top3_revenue , aes(x = `Source / Medium`, y = Total_Sessions, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Year) +
geom_text(aes(label = scales::comma(Total_Revenue)),
vjust = -0.5, size = 3.5) +
labs(
title = "Top 3 Traffic Sources per Year by Revenue (with Revenue labels)",
x = "Source / Medium",
y = "Total Sessions"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
top3_dual <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
) %>%
slice_max(Total_Revenue, n = 3) %>%
ungroup()
top3_revenue <- top3_dual %>%
select(`Source / Medium`, Total_Sessions, Total_Revenue)
ggplot(top3_revenue , aes(x = `Source / Medium`, y = Total_Sessions, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = scales::comma(Total_Revenue)),
vjust = -0.5, size = 3.5) +
labs(
title = "Top 3 Traffic Sources by Revenue (with Revenue labels)",
x = "Source / Medium",
y = "Total Session"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
conversion_by_device <- df_clean_task_one %>%
group_by(Year, `Month of the year`, `Source / Medium`) %>%
summarise(
Conversion = `Conversion Rate (%)`,
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
kable(conversion_by_device, caption = "Conversion Rate by 'Device' (Source/Medium) per Month and Year")
ggplot(conversion_by_device, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
facet_wrap(~ Year) +
labs(
title = "Average Conversion Rate by Device per Month and Year",
x = "Month",
y = "Conversion Rate (%)",
fill = "Device"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
device_2019 <- filter(conversion_by_device, Year == 2019)
device_2020 <- filter(conversion_by_device, Year == 2020)
kable(device_2019, caption = "Conversion Rate by Device - 2019")
kable(device_2020, caption = "Conversion Rate by Device - 2020")
ggplot(device_2019, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
labs(
title = "2019: Avg. Conversion Rate by Device per Month",
x = "Month",
y = "Conversion Rate (%)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
ggplot(device_2020, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
labs(
title = "2020: Avg. Conversion Rate by Device per Month",
x = "Month",
y = "Conversion Rate (%)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
df_device_simulated <- df_clean_task_one %>%
mutate(
mobile_score =
ifelse(`Bounce Rate` >= 58, 1, 0) +
ifelse(`Avg. Session Duration` <= 60, 1, 0) +
ifelse(`Conversion Rate (%)` <= 2, 1, 0),
desktop_score =
ifelse(`Bounce Rate` <= 50, 1, 0) +
ifelse(`Avg. Session Duration` >= 120, 1, 0) +
ifelse(`Conversion Rate (%)` >= 3, 1, 0),
Device = case_when(
mobile_score >= 2 ~ "Mobile",
desktop_score >= 2 ~ "Desktop",
TRUE ~ "Desktop"  # default if unclear
)
)
# set Month from  numberic to words
df_device_simulated$Month <- factor(df_device_simulated$`Month of the year`,
levels = 1:12,
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"),
ordered = TRUE)
device_summary_direct <- df_device_simulated %>%
group_by(Year, Month, Device) %>%
summarise(
Conversion = `Conversion Rate (%)`,
.groups = "drop"
)
df_device_simulated %>%
group_by(Month, Device) %>%
summarise(Count = n(), .groups = "drop") %>%
group_by(Month) %>%
mutate(Proportion = Count / sum(Count)) %>%
ggplot(aes(x = Month, y = Proportion, fill = Device)) +
geom_col(position = "stack") +
labs(
title = "Proportion of Device Types per Month",
x = "Month", y = "Proportion", fill = "Device"
) +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal()
df_table <- df_device_simulated %>%
select(Year, `Month of the year`, Device, `Conversion Rate (%)`, Sessions, Revenue) %>%
arrange(Year, `Month of the year`, Device)
kable(df_table, caption = "Conversion Rate by Device, Year, and Month (Raw Values)")
ggplot(df_device_simulated, aes(x = Month, y = `Conversion Rate (%)`, color = Device)) +
geom_jitter(width = 0.2, height = 0, alpha = 0.6, size = 2) +
facet_wrap(~ Year) +
labs(
title = "Monthly Conversion Rate by Device (Original Dataset)",
x = "Month",
y = "Conversion Rate (%)",
color = "Device"
) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
table(df_device_simulated$Device)
prop.table(table(df_device_simulated$Device)) * 100  # See % split
ggplot(df_device_simulated, aes(x = Month, y = `Conversion Rate (%)`, color = Device, group = Device)) +
geom_line(size = 1) +
geom_point(size = 2, alpha = 0.7) +
facet_wrap(~ Year) +
labs(
title = "Monthly Conversion Rate by Device",
x = "Month",
y = "Conversion Rate (%)",
color = "Device"
) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_device_simulated, aes(x = Month, y = `Conversion Rate (%)`, fill = Device)) +
geom_col(position = "dodge") +
facet_wrap(~ Year) +
labs(
title = "Monthly Conversion Rate by Device (Original Dataset)",
x = "Month",
y = "Conversion Rate (%)",
fill = "Device"
) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df_relationship <- df_clean_task_one %>%
select(`Bounce Rate`, `Conversion Rate (%)`, Revenue, Transactions)
cor_matrix <- round(cor(df_relationship, use = "complete.obs"), 2)
cor_df <- as.data.frame(cor_matrix) %>%
mutate(Var1 = rownames(.)) %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "Correlation")
cor_matrix
cor_df
ggplot(cor_df, aes(x = Var1, y = Var2, fill = Correlation)) +
geom_tile(color = "white") +
geom_text(aes(label = Correlation), color = "black", size = 4) +
scale_fill_gradient2(low = "red", mid = "white", high = "green",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
labs(title = "Heatmap: Bounce Rate vs Conversion, Transactions, Revenue",
x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_clean_task_one, aes(x = Transactions, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Transaction vs Revenue",
x = "Transaction", y = "Revenue") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Conversion Rate (%)`, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Conversion Rate (%) vs Revenue",
x = "Conversion Rate (%)", y = "Revenue") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Conversion Rate (%)`, y = Transactions)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Conversion Rate (%) vs Transactions",
x = "Conversion Rate (%)", y = "Transactions") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = `Conversion Rate (%)`)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Bounce Rate vs Conversion Rate",
x = "Bounce Rate (%)", y = "Conversion Rate (%)") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = Transactions)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Bounce Rate vs Transactions",
x = "Bounce Rate (%)", y = "Transactions") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Bounce Rate vs Revenue",
x = "Bounce Rate (%)", y = "Revenue") +
theme_minimal()
df_clean <- df %>%
mutate(
`Conversion Rate (%)` = gsub("<", "", `Conversion Rate (%)`),         # Remove '<'
`Conversion Rate (%)` = as.numeric(gsub("%", "", `Conversion Rate (%)`)) / 100,  # To decimal
`Source / Medium` = as.factor(`Source / Medium`),
`Month of the year` = as.factor(`Month of the year`)
)
# Step 2: Plot - Horizontal Bar Chart
ggplot(df_clean, aes(x = `Conversion Rate (%)`,
y = `Source / Medium`,
fill = `Month of the year`)) +
geom_col(position = "dodge") +
labs(title = "Conversion Rate by Source and Month",
x = "Conversion Rate",
y = "Source of traffic") +
theme_minimal()
ggplot(conversion_by_device, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
facet_wrap(~ Year) +
labs(
title = "Average Conversion Rate by Device per Month and Year",
x = "Month",
y = "Conversion Rate (%)",
fill = "Device"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
df_clean <- df %>%
mutate(
`Conversion Rate (%)` = gsub("<", "", `Conversion Rate (%)`),         # Remove '<'
`Conversion Rate (%)` = as.numeric(gsub("%", "", `Conversion Rate (%)`)) / 100,  # To decimal
`Source / Medium` = as.factor(`Source / Medium`),
`Month of the year` = as.factor(`Month of the year`)
)
# Step 2: Plot - Horizontal Bar Chart
ggplot(df_clean, aes(x = `Conversion Rate (%)`,
y = `Source / Medium`,
fill = `Month of the year`)) +
geom_col(position = "dodge") +
labs(title = "Conversion Rate by Source and Month",
x = "Conversion Rate",
y = "Source of traffic") +
theme_minimal()
