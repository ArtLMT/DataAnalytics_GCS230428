x = "Source / Medium",
y = "Total Sessions"
) +
theme_minimal()
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
) +
ungroup()
# Get top 3 by revenue
top3_revenue <- top3_dual %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
#.groups = "drop"
ungroup()
)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
# Get top 3 by revenue
top3_revenue <- top3_dual %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
#.groups = "drop"
)
# Get top 3 by revenue
top3_revenue <- top3_dual %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
#.groups = "drop"
) %>%
ungroup()
# Get top 3 by revenue
top3_revenue <- top3_dual %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
# Get top 3 by revenue
top3_revenue <- top3_dual %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
summary_table
# Get top 3 by revenue
top3_revenue <- top3_dual %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
summary_table
top3_dual
# Get top 3 by revenue
top3_revenue <- top3_dual %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
# Get top 3 by revenue
top3_revenue <- summary_table %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
top3_revenue <- top3_combined_unique %>%
select(`Source / Medium`, Total_Sessions, Total_Revenue)
ggplot(top3_revenue , aes(x = `Source / Medium`, y = Total_Revenue, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(labels = comma) +
geom_text(aes(label = scales::comma(Total_Revenue)),
vjust = -0.5, size = 3.5) +
labs(
title = "Top 3 Traffic Sources by Revenue",
x = "Source / Medium",
y = "Total Revenue"
) +
theme_minimal()
ggplot(top3_revenue , aes(x = `Source / Medium`, y = Total_Sessions, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(labels = comma) +
geom_text(aes(label = scales::comma(Total_Sessions)),
vjust = -0.5, size = 3.5) +
labs(
title = "Top 3 Traffic Sources by Session",
x = "Source / Medium",
y = "Total Sessions"
) +
theme_minimal()
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(skimr)
library(knitr) # For better table
library(lubridate) # Task 1B test
library(scales)
df <- read_csv("../data/Web Analytic_Dataset.csv")
df
cat("The dimension of dataset: number of columns", ncol(df), "number of rows: ", nrow((df)))
str(df) # Structure of dataset
sapply(df,class)
colSums(is.na(df))
any(duplicated(df))
df_clean_task_one <- df %>%
mutate(
Revenue = as.numeric(gsub(",", "", Revenue)),
Sessions = as.numeric(gsub(",", "", Sessions)),
`Conversion Rate (%)` = gsub("<", "", `Conversion Rate (%)`),         # Remove < symbol
`Conversion Rate (%)` = as.numeric(gsub("%", "", `Conversion Rate (%)`)),
`Bounce Rate` = as.numeric(gsub("%", "", `Bounce Rate`))
)
str(df_clean_task_one)
top3_dual <- df_clean_task_one %>%
group_by(Year, `Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
) %>%
group_by(Year) %>%
slice_max(Total_Sessions, n = 3) %>%
ungroup()
# Plot
top3_sessions <- top3_dual %>%
select(Year, `Source / Medium`, Total_Sessions, Total_Revenue)
ggplot(top3_sessions, aes(x = `Source / Medium`, y = Total_Sessions, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = scales::comma(Total_Sessions)),
vjust = -0.5, size = 3.5) +
facet_wrap(~ Year) +
labs(
title = "Top 3 Traffic Sources per Year by Sessions",
x = "Source / Medium",
y = "Total Sessions"
) +
theme_minimal()
# theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(top3_sessions, aes(x = `Source / Medium`, y = Total_Revenue, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = comma(Total_Revenue)), # label hien data len
vjust = -0.5, size = 3.5) +
facet_wrap(~ Year) +
labs(
title = "Revenue of the Top 3 Traffic Sources per Year by Sessions",
x = "Source / Medium",
y = "Total Revenue"
) +
theme_minimal()
top3_dual <- df_clean_task_one %>%
group_by(Year, `Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
) %>%
group_by(Year) %>%
slice_max(Total_Revenue, n = 3) %>%
ungroup()
top3_revenue <- top3_dual %>%
select(Year, `Source / Medium`, Total_Sessions, Total_Revenue)
ggplot(top3_revenue , aes(x = `Source / Medium`, y = Total_Revenue, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ Year) +
geom_text(aes(label = scales::comma(Total_Revenue)),
vjust = -0.5, size = 3.5) +
labs(
title = "Top 3 Traffic Sources per Year by Revenue",
x = "Source / Medium",
y = "Total Sessions"
) +
theme_minimal()
top3_revenue_all_time <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(Total_Revenue = sum(Revenue, na.rm = TRUE), .groups = "drop") %>%
slice_max(Total_Revenue, n = 3) %>%
ungroup()
ggplot(top3_revenue_all_time, aes(x = `Source / Medium`, y = Total_Revenue, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = scales::comma(Total_Revenue)), vjust = -0.5, size = 3.5) +
scale_y_continuous(labels = comma) +
labs(
title = "Top 3 Traffic Sources by Revenue (All Years)",
x = "Source / Medium",
y = "Total Revenue"
) +
theme_minimal()
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
# Get top 3 by revenue
top3_revenue <- summary_table %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
top3_revenue <- top3_combined_unique %>%
select(`Source / Medium`, Total_Sessions, Total_Revenue)
ggplot(top3_revenue , aes(x = `Source / Medium`, y = Total_Revenue, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(labels = comma) +
geom_text(aes(label = scales::comma(Total_Revenue)),
vjust = -0.5, size = 3.5) +
labs(
title = "Top 3 Traffic Sources by Revenue",
x = "Source / Medium",
y = "Total Revenue"
) +
theme_minimal()
ggplot(top3_revenue , aes(x = `Source / Medium`, y = Total_Sessions, fill = `Source / Medium`)) +
geom_col(show.legend = FALSE) +
scale_y_continuous(labels = comma) +
geom_text(aes(label = scales::comma(Total_Sessions)),
vjust = -0.5, size = 3.5) +
labs(
title = "Top 3 Traffic Sources by Session",
x = "Source / Medium",
y = "Total Sessions"
) +
theme_minimal()
conversion_by_device <- df_clean_task_one %>%
group_by(Year, `Month of the year`, `Source / Medium`) %>%
summarise(
Conversion = `Conversion Rate (%)`,
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
device_summary <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(`Total Users` = sum(Users, na.rm=TRUE),
`Total New Users` = sum(`New Users`, na.rm=TRUE))
print(device_summary)
# knitr::kable(device_summary, caption = "Total Users and New Users by Device")
ggplot(device_summary_long, aes(x = `Source / Medium`, y = Count, fill = Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
scale_y_continuous(labels = comma) +
scale_fill_manual(values = c("Total Users" = "#1f77b4", "Total New Users" = "#2ca02c")) +
labs(
title = "Total Users and New Users by Device",
subtitle = "Grouped by Source / Medium",
x = "Device (Source / Medium)",
y = "Number of Users",
fill = "User Type"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "top"
)
kable(conversion_by_device, caption = "Conversion Rate by 'Device' (Source/Medium) per Month and Year")
ggplot(conversion_by_device, aes(x = factor(`Month of the year`), y = Conversion, fill = `Source / Medium`)) +
geom_col(position = "dodge") +
facet_wrap(~ Year) +
labs(
title = "Average Conversion Rate by Device per Month and Year",
x = "Month",
y = "Conversion Rate (%)",
fill = "Device"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0))
month_coverage <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(Month_Count = n_distinct(`Month of the year`), .groups = "drop") %>%
filter(Month_Count == 12)
month_coverage
df_filtered <- df_clean_task_one %>%
semi_join(month_coverage, by = "Source / Medium") %>%
mutate(
Month_Name = factor(
month.name[as.integer(`Month of the year`)],
levels = month.name
),
YearMonth = paste(Year, Month_Name, sep = "-")
) %>%
arrange(`Source / Medium`, Year, as.integer(`Month of the year`))
conversion_table <- df_filtered %>%
select(`Source / Medium`, Year, Month_Name, `Conversion Rate (%)`)
kable(conversion_table,
caption = "Conversion Rates, Sessions, and Revenue by Device, Year, and Month",
col.names = c("Device", "Year", "Month", "Conversion Rate (%)"))
ggplot(df_filtered, aes(x = YearMonth, y = `Conversion Rate (%)`, group = `Source / Medium`, color = `Source / Medium`)) +
geom_line(size = 1) +
geom_point(size = 3) +  # Put point directly on the line
theme_minimal() +
labs(
title = "Conversion Rate by Device Over Time",
subtitle = "Timeline: September 2019 to August 2020 (Devices with Full 12-Month Coverage)",
x = "Month-Year",
y = "Conversion Rate (%)"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "top",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.minor = element_blank()
)
df_filtered <- df_clean_task_one %>%
mutate(
Month_Name = factor(
month.name[as.integer(`Month of the year`)],
levels = month.name
),
YearMonth = paste(Year, Month_Name, sep = "-")
) %>%
arrange(`Source / Medium`, Year, as.integer(`Month of the year`))
# Calculate average conversion rate per device and select top 5
top_devices <- df_filtered %>%
group_by(`Source / Medium`) %>%
summarise(Avg_Conversion_Rate = mean(`Conversion Rate (%)`, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(Avg_Conversion_Rate)) %>%
slice_head(n = 5)
# Print top 5 devices for verification
print(top_devices)
# Filter data for top 5 devices
df_top5 <- df_filtered %>%
filter(`Source / Medium` %in% top_devices$`Source / Medium`)
ggplot(df_top5, aes(x = YearMonth, y = `Conversion Rate (%)`, group = `Source / Medium`, color = `Source / Medium`)) +
geom_line(size = 1) +
geom_point(size = 3) +
theme_minimal() +
labs(
title = "Conversion Rate by Top 5 Devices Over Time",
subtitle = "Timeline: September 2019 to August 2020",
x = "Month-Year",
y = "Conversion Rate (%)"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "top",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.minor = element_blank()
)
df_relationship <- df_clean_task_one %>%
select(`Bounce Rate`, `Conversion Rate (%)`, Revenue, Transactions)
cor_matrix <- round(cor(df_relationship, use = "complete.obs"), 2)
cor_df <- as.data.frame(cor_matrix) %>%
mutate(Var1 = rownames(.)) %>%
pivot_longer(cols = -Var1, names_to = "Var2", values_to = "Correlation")
cor_matrix
cor_df
ggplot(cor_df, aes(x = Var1, y = Var2, fill = Correlation)) +
geom_tile(color = "white") +
geom_text(aes(label = Correlation), color = "black", size = 4) +
scale_fill_gradient2(low = "red", mid = "white", high = "green",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name = "Correlation") +
labs(title = "Heatmap: Bounce Rate vs Conversion, Transactions, Revenue",
x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_clean_task_one, aes(x = Transactions, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Transaction vs Revenue",
x = "Transaction", y = "Revenue") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Conversion Rate (%)`, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Conversion Rate (%) vs Revenue",
x = "Conversion Rate (%)", y = "Revenue") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Conversion Rate (%)`, y = Transactions)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "green") +
labs(title = "Conversion Rate (%) vs Transactions",
x = "Conversion Rate (%)", y = "Transactions") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = `Conversion Rate (%)`)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Bounce Rate vs Conversion Rate",
x = "Bounce Rate (%)", y = "Conversion Rate (%)") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = Transactions)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Bounce Rate vs Transactions",
x = "Bounce Rate (%)", y = "Transactions") +
theme_minimal()
ggplot(df_clean_task_one, aes(x = `Bounce Rate`, y = Revenue)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Bounce Rate vs Revenue",
x = "Bounce Rate (%)", y = "Revenue") +
theme_minimal()
View(df)
View(df_clean_task_one)
View(df_filtered)
# Summarise the data
summary_table <- df_clean_task_one %>%
group_by(`Source / Medium`) %>%
summarise(
Total_Sessions = sum(Sessions, na.rm = TRUE),
Total_Revenue = sum(Revenue, na.rm = TRUE),
.groups = "drop"
)
# Get top 3 by revenue
top3_revenue <- summary_table %>%
slice_max(Total_Revenue, n = 3)
# Get top 3 by sessions
top3_sessions <- summary_table %>%
slice_max(Total_Sessions, n = 3)
# Combine both tables & Remove duplicate
top3_combined_unique <- bind_rows(top3_revenue, top3_sessions) %>%
distinct(`Source / Medium`, .keep_all = TRUE)
